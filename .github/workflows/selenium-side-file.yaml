# Name of the GitHub Action Workflow
name: Run Selenium Chrome SIDE File Tests

# This workflow is triggered on every push to the repository
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code on the runner VM
    - name: Checkout code
      uses: actions/checkout@v4

    # Install .NET SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x' # Adjust this to your project's .NET version

    # Build and run the Blazor app in the background on port 5158
    - name: Build and Run Blazor App
      run: |
        cd POC.TestBlazorUI/POC.TestBlazorUI
        dotnet build
        dotnet run --urls http://localhost:5158 &

    # Give the Blazor app some time to start
    - name: Wait for Blazor App to start
      run: sleep 15

    # Installs selenium-side-runner on the runner VM
    - name: Install selenium-side-runner
      run: |
        npm install -g selenium-side-runner@3.17.0

    # Check if port 9222 is available
    - name: Check Port Availability
      run: |
        netstat -an | grep 9222 || echo "Port 9222 is available"

    # Start the standalone Chrome in the background
    - name: Start Chrome in Docker
      run: |
        docker run -d -p 4444:4444 --shm-size="2g" selenium/standalone-chrome-debug

    - name: List Docker Containers
      run: docker ps

    - name: Wait for a few seconds
      run: sleep 10

    - name: Check Selenium Server
      run: |
        curl http://localhost:4444/status

    - name: Check Selenium Docker Logs
      run: |
        CONTAINER_ID=$(docker ps -q --filter ancestor=selenium/standalone-chrome-debug)
        if [ ! -z "$CONTAINER_ID" ]; then
          docker logs $CONTAINER_ID
        fi

    # Runs the Selenium IDE tests using the Dockerized Chrome
    - name: Run Selenium IDE tests - Bing
      run: |
        SELENIUM_REMOTE_URL="http://localhost:4444/wd/hub" selenium-side-runner -c "browserName=chrome chromeOptions.args=[headless,no-sandbox,disable-dev-shm-usage,disable-blink-features=AutomationControlled]" poc-azure-pipelines-selenium-tests.side

    # Runs the Selenium IDE tests against the Blazor app
    - name: Run Selenium IDE tests - POC.TestBlazorUI
      run: |
        SELENIUM_REMOTE_URL="http://localhost:4444/wd/hub" selenium-side-runner -c "browserName=chrome chromeOptions.args=[headless,no-sandbox,disable-dev-shm-usage,disable-blink-features=AutomationControlled]" POC.TestBlazorUI.side

    # Fetch Docker logs if there's a failure
    - name: Fetch Docker logs
      if: failure()
      run: |
        CONTAINER_ID=$(docker ps -q --filter ancestor=selenium/standalone-chrome-debug)
        if [ ! -z "$CONTAINER_ID" ]; then
          docker logs $CONTAINER_ID
        fi

